openapi: 3.0.0
info:
  title: MyTick API
  description: API for managing tasks with authentication using JWT.
  version: 1.0.1
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /login:
    post:
      summary: Authenticate user and return a JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: test@flutterando.com.br
                password:
                  type: string
                  example: password1
              required:
                - username
                - password
      responses:
        '200':
          description: Authentication successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '403':
          description: Invalid credentials.
  /tasks:
    get:
      summary: Get all tasks.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    completed:
                      type: boolean
    post:
      summary: Add a new task.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                completed:
                  type: boolean
              required:
                - title
                - description
      responses:
        '200':
          description: Task created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  completed:
                    type: boolean
  /tasks/{id}:
    put:
      summary: Update an existing task.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                completed:
                  type: boolean
      responses:
        '200':
          description: Task updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  completed:
                    type: boolean
        '404':
          description: Task not found.
    delete:
      summary: Delete a task by ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully.
        '404':
          description: Task not found.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
